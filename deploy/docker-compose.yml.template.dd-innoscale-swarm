version: "3.7"

services:
  dd-agent-1:
    image: datadog/agent:${DD_AGENT_VERSION}
    deploy:
      replicas: 1
      restart_policy:
        condition: always
        delay: 5s
        window: 20s
      placement:
        constraints: [node.hostname == ${ENV_SWARM_HOST_1}]
    environment:
      - DD_API_KEY=${ENV_DD_API_KEY}
      # - DD_ENV=${ENV_NAME}
      - DD_HOSTNAME=${ENV_SWARM_HOST_1}
      - DD_APM_ENABLED=false
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=false
      - DD_LOGS_CONFIG_USE_HTTP=true
      - DD_LOGS_CONFIG_USE_COMPRESSION=true
      - DD_LOGS_CONFIG_COMPRESSION_LEVEL=6
      - DD_CONTAINER_EXCLUDE=name:dd-agent-1
      - DD_USE_DOGSTATSD=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    networks:
      - ${ENV_NAME}
      - production
      - production-frontend
      - production-kafka_default
      - production-mongo_default
      - production-zk_default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - ${ENV_PATH}/production/data/logs/wingfoal:/var/log/production/wingfoal:ro
      - ${ENV_PATH}/production/data/logs/mep-api-smtp-gateway:/var/log/production/mep-api-smtp-gateway:ro

  dd-agent-2:
    image: datadog/agent:${DD_AGENT_VERSION}
    deploy:
      replicas: 1
      restart_policy:
        condition: always
        delay: 5s
        window: 20s
      placement:
        constraints: [node.hostname == ${ENV_SWARM_HOST_2}]
    environment:
      - DD_API_KEY=${ENV_DD_API_KEY}
      # - DD_ENV=${ENV_NAME}
      - DD_HOSTNAME=${ENV_SWARM_HOST_2}
      - DD_APM_ENABLED=false
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=false
      - DD_LOGS_CONFIG_USE_HTTP=true
      - DD_LOGS_CONFIG_USE_COMPRESSION=true
      - DD_LOGS_CONFIG_COMPRESSION_LEVEL=6
      - DD_CONTAINER_EXCLUDE=name:dd-agent-2
      - DD_USE_DOGSTATSD=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    networks:
      - ${ENV_NAME}
      - production
      - production-frontend
      - production-kafka_default
      - production-mongo_default
      - production-zk_default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - ${ENV_PATH}/production/data/logs/wingfoal:/var/log/production/wingfoal:ro
      - ${ENV_PATH}/production/data/logs/mep-api-smtp-gateway:/var/log/production/mep-api-smtp-gateway:ro

  dd-agent-3:
    image: datadog/agent:${DD_AGENT_VERSION}
    deploy:
      replicas: 1
      restart_policy:
        condition: always
        delay: 5s
        window: 20s
      placement:
        constraints: [node.hostname == ${ENV_SWARM_HOST_3}]
    environment:
      - DD_API_KEY=${ENV_DD_API_KEY}
      # - DD_ENV=${ENV_NAME}
      - DD_HOSTNAME=${ENV_SWARM_HOST_3}
      - DD_APM_ENABLED=false
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=false
      - DD_LOGS_CONFIG_USE_HTTP=true
      - DD_LOGS_CONFIG_USE_COMPRESSION=true
      - DD_LOGS_CONFIG_COMPRESSION_LEVEL=6
      - DD_CONTAINER_EXCLUDE=name:dd-agent-3
      - DD_USE_DOGSTATSD=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    networks:
      - ${ENV_NAME}
      - production
      - production-frontend
      - production-kafka_default
      - production-mongo_default
      - production-zk_default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - ${ENV_PATH}/production/data/logs/wingfoal:/var/log/production/wingfoal:ro
      - ${ENV_PATH}/production/data/logs/mep-api-smtp-gateway:/var/log/production/mep-api-smtp-gateway:ro

networks:
  ${ENV_NAME}:
    external: true
  production:
    external: true
  production-frontend:
    external: true
  production-kafka_default:
    external: true
  production-mongo_default:
    external: true
  production-zk_default:
    external: true
